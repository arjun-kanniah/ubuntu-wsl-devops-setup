---

- name: Setup Ubuntu WSL with Required Packages and Configuration
  hosts: localhost
  become: yes

  vars_files:
    - vars/setup_vars.yml

  tasks:

    - name: Ensure ssh directory exists
      file: 
        path: '{{ ssh_dir_path }}'
        state: directory
        owner: '{{ ubuntu_user }}'
        group: '{{ ubuntu_user }}'
        mode: '0700'

    - name: "Create SSH key-pair for {{ ubuntu_user }}"
      openssh_keypair:
        path: '{{ ssh_key_path }}'
      become_user: '{{ ubuntu_user }}'

    - name: "Edit and validate sudoers for {{ ubuntu_user }}"
      lineinfile:
        path: '{{ sudoers_file_path }}'
        regexp: '^%sudo'
        line: '{{ sudo_nopass_line }}'
        validate: '{{ visudo_path }}'

    - name: Create git aliases
      blockinfile:
        path: '{{ bash_alias_file_path }}'
        block: |
          alias gcl="git clone"
          alias gbr="git branch"
          alias gco="git chekout"
          alias gad="git add --all"
          alias gcm="git commit -m"
          alias gpl="git pull"
          alias gps="git push"
          alias gst="git status"
        insertafter: EOF
        create: yes

    - name: Install Java OpenJDK
      include_role: 
        name: ansible-role-java
      vars:
        - java_packages: '{{ openjdk_package }}'
        - java_home: '{{ java_home_path }}'

    - name: Install Terraform
      include_role: 
        name: ansible-role-terraform
      vars:
        - terraform_version: '{{ terraform_install_version }}'

    - name: Install Packer
      include_role: 
        name: ansible-role-packer
      vars:
        - packer_version: '{{ packer_install_version }}'

    - name: Install Docker CE and Docker Compose
      include_role:
        name: ansible-role-docker
      vars:
        - docker_users: 
            - '{{ docker_sudo_users }}'

    - name: Install Required Python Packages via pip3
      include_role: 
        name: ansible-role-pip
      vars:
        - pip_install_packages: '{{ pip_package_list }}'

    - name: Install AWX Tower
      include_role:
        name: ansible-role-awx
      vars:
        - docker_hub_password: '{{ docker_hub_pass }}'
        - awx_repo_dir: '{{ ubuntu_user_installs }}/awx-tower'

    - name: Install Jenkins CI
      include_role:
        name: ansible-role-jenkins_as_docker
      vars:
       - jenkins_admin_user: '{{ jenkins_admin }}'
       - jenkins_admin_password: '{{ jenkins_admin_pass }}'
       - docker_hub_username: '{{ docker_hub_user }}'
       - docker_hub_password: '{{ docker_hub_pass }}'
       - dockerfile_build_path: '{{ ansible_roles_path }}/ansible-role-jenkins_as_docker/files'

    - name: Setup Nginx to Serve Apps on Localhost
      include_role:
        name: ansible-role-nginx_for_local
      vars:
        - nginx_app_list: '{{ app_list }}'

    - name: Setup and Customize Oh-My-Zsh
      include_role:
        name: ansible-role-ohmyzsh
      vars:
        zsh_theme: '{{ zsh_theme_name }}'